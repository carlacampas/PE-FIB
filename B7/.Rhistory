mua <- mean(android$Frecuencia)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ios <- read.table("clipboard",header=TRUE)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
View(android)
View(android)
View(ios)
View(ios)
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = ((na-1)*sda^2+(ni-1)*sdi^2)/(na+ni-2)
s = sqrt(s2)
se = s*sqrt(1/na+1/ni)
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
summary(android$Frecuencia)
summary(ios$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
plot(android$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
x = density(android$Frecuencia)
y = density(ios$Frecuencia)
View(x)
View(x)
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
qqnorm(android$Frecuencia)
qqline(android$Frecuencia)
plot(x)
hist(ios$Frecuencia, xlab = "Frecuencia de CPU", col = "blue", main="Historiograma de Android")
qqnorm(ios$Frecuencia)
qqline(ios$Frecuencia)
plot(y)
boxplot(android$Frecuencia, ios$Frecuencia)
var.test(android$Frecuencia, ios$Frecuencia)
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = ((na-1)*sda^2+(ni-1)*sdi^2)/(na+ni-2)
s = sqrt(s2)
se = s*sqrt(1/na+1/ni)
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
summary(android$Frecuencia)
summary(ios$Frecuencia)
hist(ios$Frecuencia, xlab = "Frecuencia de CPU", col = "blue", main="Historiograma de Android")
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
hist(ios$Frecuencia, xlab = "Frecuencia de CPU", col = "blue", main="Historiograma de iOs")
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
hist(ios$Frecuencia, xlab = "Frecuencia de CPU", col = "blue", main="Historiograma de iOs")
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
dades <- read.table("clipboard", header = TRUE)
y = dades$Precio
x = dades$Frecuencia
x
y
mux = mean(x)
muy = mean(y)
sx = sd(x)
sy = sd(y)
r = sxy/(sx*sy)
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
b1 = sxy/sx^2
r = sxy/(sx*sy)
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
dades <- read.table("clipboard", header = TRUE)
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio)
mux = mean(x)
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio)
mux = mean(x)
dades <- read.table("clipboard", header = TRUE)
dades <- read.table("clipboard", header = TRUE)
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio)
mux = mean(x)
muy = mean(y)
sx = sd(x)
sy = sd(y)
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
r = sxy/(sx*sy)
b1 = sxy/sx^2
b0 = muy-b1*mux
mod = lm((x)~(y), dades)
summary(mod)
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
x
mod = lm((x)~(y), dades)
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
mod = lm((x)~(y), dades)
View(mod)
summary(mod)
boxplot(android$Frecuencia, ios$Frecuencia)
boxplot(android$Frecuencia, ios$Frecuencia)
sda
sdi
sda
sdi^2
sda^2
t
q_alpha
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = ((na-1)*sda^2+(ni-1)*sdi^2)/(na+ni-2)
s = sqrt(s2)
se = s*sqrt(1/na+1/ni)
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
summary(android$Frecuencia)
t
q_alpha
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
summary(android$Frecuencia)
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = ((na-1)*sda^2+(ni-1)*sdi^2)/(na+ni-2)
s = sqrt(s2)
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico
t
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
android <- read.table("clipboard",header=TRUE)
android <- read.table("clipboard",header=TRUE)
View(android)
View(android)
ios <- read.table("clipboard",header=TRUE)
View(ios)
View(ios)
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = ((na-1)*sda^2+(ni-1)*sdi^2)/(na+ni-2)
s = sqrt(s2)
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
t
t = (na-ni)/se #estadistico
t = (mua-mui)/se #estadistico
s2 = (((na-1)*(sda^2))+((ni-1)*(sdi^2)))/(na+ni-2)
s = sqrt(s2)
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico
t
q_alpha = qt(0.05, df = na+ni-1)
t
t = (mua-mui)/(s*sqrt((1/na)+(1/ni))) #estadistico
t = (mua-mui)/(s*sqrt((1/na)+(1/ni))) #estadistico
t
t.test(android$Frecuencia, ios$Frecuencia, alternative = "less")
q_alpha = qt(0.025, df = na+ni-2)
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(-2.7022, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(-2.7022, df = 17.389)
t.test(android$Frecuencia, ios$Frecuencia, alternative =c ("less"))
t.test(android$Frecuencia, ios$Frecuencia, alternative =c ("less"))
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", df=52)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", df=52)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", df=52)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
android <- read.table("clipboard",header=TRUE)
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ios <- read.table("clipboard",header=TRUE)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = (((na-1)*(sda^2))+((ni-1)*(sdi^2)))/(na+ni-2)
s = sqrt(s2)
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
summary(android$Frecuencia)
t
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
IC
plot(android$Frecuencia)
plot(android$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
plot(android$Frecuencia)
x = density(android$Frecuencia)
y = density(ios$Frecuencia)
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
qqnorm(android$Frecuencia)
qqline(android$Frecuencia)
boxplot(android$Frecuencia, ios$Frecuencia)
dades <- read.table("clipboard", header = TRUE)
dades <- read.table("clipboard", header = TRUE)
dades <- read.table("clipboard", header = TRUE)
View(dades)
View(dades)
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio)
mux = mean(x)
muy = mean(y)
sx = sd(x)
sy = sd(y)
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
r = sxy/(sx*sy)
b1 = sxy/sx^2
b0 = muy-b1*mux
mod = lm((x)~(y), dades)
View(mod)
View(mod)
summary(mod)
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
t.test(android$Frecuencia, ios$Frecuencia)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
t.test(android$Frecuencia, ios$Frecuencia, alternative ="two.sided")
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
t.test(android$Frecuencia, ios$Frecuencia, alternative ="two.sided")
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
android <- read.table("clipboard",header=TRUE)
android <- read.table("clipboard",header=TRUE)
View(android)
View(android)
na <- length(android$SO)
mua <- mean(android$Frecuencia)
sda <- sd(android$Frecuencia)
ios <- read.table("clipboard",header=TRUE)
ni <- length(ios$SO)
mui <- mean(ios$Frecuencia)
sdi <- sd(ios$Frecuencia)
s2 = (((na-1)*(sda^2))+((ni-1)*(sdi^2)))/(na+ni-2)
s = sqrt(s2)
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, izquierdo. Con confiaza de 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less")
t
q_alpha = qt(0.05, df = 52)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", var.equal=FALSE)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", var.equal=TRUE)
q_alpha
t
p_val
dades <- read.table("clipboard", header = TRUE)
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio)
mux = mean(x)
muy = mean(y)
sx = sd(x)
sy = sd(y)
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
r = sxy/(sx*sy)
b1 = sxy/sx^2
b0 = muy-b1*mux
b0
b1
mod = lm((x)~(y), dades)
mod = lm((x)~(y), dades)
b0 = muy-b1*mux
mod = lm((x)~(y), dades)
summary(mod)
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
#Android
android <- read.table("clipboard",header=TRUE)
#iOS
ios <- read.table("clipboard",header=TRUE)
na <- length(android$SO) #numero de muestras con Android
mua <- mean(android$Frecuencia) #media de la frecuencia de Android
sda <- sd(android$Frecuencia) #desviacion estandard de la frecuencia de Android
ni <- length(ios$SO) #numero de muestras con iOS
mui <- mean(ios$Frecuencia) #media de la frecuencia de iOS
sdi <- sd(ios$Frecuencia) #desviacion estandard de la frecuencia de iOS
#Android
android <- read.table("clipboard",header=TRUE)
na <- length(android$SO) #numero de muestras con Android
mua <- mean(android$Frecuencia) #media de la frecuencia de Android
sda <- sd(android$Frecuencia) #desviacion estandard de la frecuencia de Android
#iOS
ios <- read.table("clipboard",header=TRUE)
ni <- length(ios$SO) #numero de muestras con iOS
mui <- mean(ios$Frecuencia) #media de la frecuencia de iOS
sdi <- sd(ios$Frecuencia) #desviacion estandard de la frecuencia de iOS
#S pooled
s2 = (((na-1)*(sda^2))+((ni-1)*(sdi^2)))/(na+ni-2)
s = sqrt(s2)
se = s*sqrt((1/na)+(1/ni))
t = (mua-mui)/se #estadistico t
q_alpha = qt(0.05, df = na+ni-2)
# unilateral, por la izquierda, Con una confiaza del 95%, t < q_alpha.
# Rechazamos H0.
p_val = pt(t, df = na+ni-2)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", var.equal=TRUE)
summary(android$Frecuencia)
summary(ios$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
x = density(android$Frecuencia)
y = density(ios$Frecuencia)
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
qqnorm(android$Frecuencia)
qqline(android$Frecuencia)
plot(x)
hist(ios$Frecuencia, xlab = "Frecuencia de CPU", col = "blue", main="Historiograma de iOs")
qqnorm(ios$Frecuencia)
qqline(ios$Frecuencia)
plot(y)
boxplot(android$Frecuencia, ios$Frecuencia)
var.test(android$Frecuencia, ios$Frecuencia)
dades <- read.table("clipboard", header = TRUE)
t.test(android$Frecuencia, ios$Frecuencia, var.equal=TRUE)
t.test(android$Frecuencia, ios$Frecuencia, alternative ="less", var.equal=TRUE)
plot(android$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
plot(android$Frecuencia)
summary(android$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
plot(android$Frecuencia)
plot(ios$Frecuencia)
x = density(android$Frecuencia)
x = density(android$Frecuencia)
y = density(ios$Frecuencia)
plot(x)
x = density(android$Frecuencia)
y = density(ios$Frecuencia)
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
qqnorm(android$Frecuencia)
qqline(android$Frecuencia)
plot(x)
hist(ios$Frecuencia, xlab = "Frecuencia de CPU", col = "blue", main="Historiograma de iOs")
qqnorm(ios$Frecuencia)
qqline(ios$Frecuencia)
plot(y)
h<-hist(android$Frecuencia, xlab = "Frecuencia de CPU", col = "red", main="Historiograma de Android")
qqnorm(android$Frecuencia)
qqline(android$Frecuencia)
qqnorm(android$Frecuencia)
qqline(android$Frecuencia)
qqline(android$Frecuencia)
qqnorm(android$Frecuencia) #
qqnorm(ios$Frecuencia) #
qqnorm(ios$Frecuencia) #
qqline(ios$Frecuencia)
plot(y)
boxplot(android$Frecuencia, ios$Frecuencia)
var.test(android$Frecuencia, ios$Frecuencia)
dades <- read.table("clipboard", header = TRUE)
dades <- read.table("clipboard", header = TRUE)
dades <- read.table("clipboard", header = TRUE)
y = dades$Precio
y
n = length(dades$Precio)
mux = mean(x)
muy = mean(y)
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio)
mux = mean(x)
muy = mean(y)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
IC = c((mua-mui)+q_alpha*se, (mua-mui)-q_alpha*se)
C
IC
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
r = sxy/(sx*sy) #corelacion
r
b1 = sxy/sx^2 #
b0 = muy-b1*mux #
b1
y = dades$Precio
x = dades$Frecuencia
n = length(dades$Precio) #tamaño muestras
sx = sd(x) #desviacion estandard del precio
sy = sd(y) #desviacion estandard de la frecuencia
sxy = (sum(x*y)-sum(x)*sum(y)/n)/(n-1)
r
b1 = sxy/sx^2 #pendiente
b0 = muy-b1*mux #origen
mod = lm((x)~(y), dades) #modelo lineal
View(mod)
View(mod)
summary(mod)
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
#falla homocedasticidad y linealidad
# transformacion para que se aproxime mejor al modelo lineal
#falla homocedasticidad y linealidad
# transformacion para que se aproxime mejor al modelo lineal
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
# transformacion para que se aproxime mejor al modelo lineal
#falla homocedasticidad y linealidad
# transformacion para que se aproxime mejor al modelo lineal
#falla homocedasticidad y linealidad
# transformacion para que se aproxime mejor al modelo lineal
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
# transformacion para que se aproxime mejor al modelo lineal
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
# transformacion para que se aproxime mejor al modelo lineal
plot(x, y, xlab = "Frecuencia", ylab = "Precio")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
mod = lm((x)~(y), dades) #modelo lineal
y = ios$Frecuencia
x = android$Frecuencia
mod = lm((x)~(y), dades) #modelo lineal
summary(mod)
plot(x, y, xlab = "Frecuencia Android", ylab = "Frecuencia iOS")
plot(mod)  #hay que buscar transformaciones para cumplir las premisas
mod = lm((x)~(y), dades) #modelo lineal
y = ios$Frecuencia
x = android$Frecuencia
y = ios$Frecuencia
dade
dades
x
y
#Android
android <- read.table("clipboard",header=TRUE)
na <- length(android$SO) #numero de muestras con Android
mua <- mean(android$Frecuencia) #media de la frecuencia de Android
sda <- sd(android$Frecuencia) #desviacion estandard de la frecuencia de Android
#iOS
ios <- read.table("clipboard",header=TRUE)
ni <- length(ios$SO) #numero de muestras con iOS
mui <- mean(ios$Frecuencia) #media de la frecuencia de iOS
sdi <- sd(ios$Frecuencia) #desviacion estandard de la frecuencia de iOS
y = ios$Frecuencia
x = android$Frecuencia
mod = lm((x)~(y), dades) #modelo lineal
